"""
Django settings for gallery project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path 
DEBUG=False
BASE_DIR = Path(__file__).resolve().parent.parent
ROLLBAR = {
    'access_token': 'a7fabc408cc54eb1a62a19b3bb2cdf34',
    'environment': 'development' if DEBUG else 'production',
    'code_version': '1.0',
    'root': BASE_DIR,
}



import os
from pathlib import Path
from celery.schedules import crontab

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-3om2(-wmam5=mu#8v05uuc1o^eu4k^%979bxbx53pxs@62kw!d'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


AUTH_USER_MODEL = 'main.User'

AUTHENTICATION_BACKENDS = [
    'social_core.backends.yandex.YandexOAuth2',
    'django.contrib.auth.backends.ModelBackend',
]
SOCIAL_AUTH_YANDEX_OAUTH2_KEY = '17819eb16df24e5f93375c871334c284'  # Ваш Client ID
SOCIAL_AUTH_YANDEX_OAUTH2_SECRET = 'ae15d764c7784fd0a97ab98cd3aef137'  # Ваш Client Secret
SOCIAL_AUTH_YANDEX_OAUTH2_SCOPE = ['login:email', 'login:info']  # Запрашиваемые права
LOGIN_REDIRECT_URL = '/profile/'  # После успешного входа
LOGOUT_REDIRECT_URL = '/'  # После выхода
SOCIAL_AUTH_REDIRECT_IS_HTTPS = False  # Отключить HTTPS для localhost
SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.auth_allowed',
    'social_core.pipeline.social_auth.social_user',
    'social_core.pipeline.user.get_username',
    'main.pipeline.create_user',  # Наш кастомный конвейер
    'your_app.pipeline.register_via_social',
    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details',
)

# Разрешить создание новых пользователей
SOCIAL_AUTH_CREATE_USERS = True

# Разрешить вход для незавершенной регистрации
SOCIAL_AUTH_LOGIN_REDIRECT_URL = '/profile/'
SOCIAL_AUTH_NEW_USER_REDIRECT_URL = '/profile/'
SOCIAL_AUTH_INACTIVE_USER_URL = '/inactive/'

# Использовать сессии для хранения промежуточных данных
SOCIAL_AUTH_FIELDS_STORED_IN_SESSION = ['role']
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  
]
ALLOWED_HOSTS = ['*'] 


CSRF_TRUSTED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django_filters',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'main',
    'social_django',

    'corsheaders',
    'rest_framework', 
    'silk.apps.SilkAppConfig', 
]


REST_FRAMEWORK = {
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticatedOrReadOnly',
    ]
}

MIDDLEWARE = [
    'silk.middleware.SilkyMiddleware',
    # 'main.middleware.RoleAccessMiddleware',
    'rollbar.contrib.django.middleware.RollbarNotifierMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
  
]


LOGIN_REDIRECT_URL = '/accounts/dashboard/'
LOGOUT_REDIRECT_URL = '/'

import tempfile
MEDIA_ROOT = tempfile.mkdtemp()

CELERY_BROKER_URL = 'redis://localhost:6379/0'
CELERY_RESULT_BACKEND = 'redis://localhost:6379/0'
CELERY_TIMEZONE = 'Europe/Moscow'
CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'
# Разрешить запись всех запросов
SILKY_INTERCEPT_FUNC = lambda request: True

CELERY_BEAT_SCHEDULE = {
    'cancel-unpaid-orders': {
        'task': 'main.tasks.cancel_unpaid_orders',
        'schedule': crontab(minute=0, hour=0),  # Ежедневно в полночь
    },
    'generate-order-pdfs': {
        'task': 'main.tasks.generate_order_pdfs',
        'schedule': crontab(minute=0, hour=1),  # Ежедневно в 01:00
    },
    'send-weekly-stats': {
        'task': 'main.tasks.send_weekly_stats',
        'schedule': crontab(minute=0, hour=8, day_of_week=1),  # Каждый понедельник в 08:00
    },
}

# Разрешить профилирование для всех пользователей (для тестирования)
SILKY_AUTHENTICATION = False
SILKY_AUTHORISATION = False

# Увеличить лимит записанных запросов
SILKY_MAX_RECORDED_REQUESTS = 10**4 
SILKY_PYTHON_PROFILER = True
SILKY_PYTHON_PROFILER_BINARY = True
SILKY_INTERCEPT_PERCENT = 50  
SILKY_MAX_RECORDED_REQUESTS = 10**4

CORS_ALLOW_METHODS = [
    'GET',
    'OPTIONS',
    'POST',
    'PUT',
    'PATCH',
    'DELETE',
]

ROOT_URLCONF = 'gallery.urls'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI_APPLICATION = 'gallery.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# Настройки почты для MailHog
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'localhost'
EMAIL_PORT = 1025
EMAIL_USE_TLS = False
EMAIL_HOST_USER = ''
EMAIL_HOST_PASSWORD = ''