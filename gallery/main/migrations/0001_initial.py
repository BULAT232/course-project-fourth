# Generated by Django 5.2 on 2025-06-14 09:42

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import main.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('username', models.CharField(max_length=30, unique=True, verbose_name='Логин')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='Фамилия')),
                ('role', models.CharField(choices=[('buyer', 'Покупатель'), ('seller', 'Продавец'), ('moderator', 'Модератор'), ('admin', 'Администратор')], default='buyer', max_length=20, verbose_name='Роль')),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Баланс')),
                ('rating', models.DecimalField(decimal_places=2, default=5.0, max_digits=3, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(5.0)], verbose_name='Рейтинг')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата регистрации')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Персонал')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='users/avatars/', verbose_name='Аватар')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ['-date_joined'],
            },
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Имя художника')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='Биография')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='artists/photos/', verbose_name='Фотография')),
                ('official_site', models.URLField(blank=True, null=True, verbose_name='Официальный сайт')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('death_date', models.DateField(blank=True, null=True, verbose_name='Дата смерти')),
            ],
            options={
                'verbose_name': 'Художник',
                'verbose_name_plural': 'Художники',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название категории')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('icon', models.CharField(blank=True, max_length=50, null=True, verbose_name='Иконка')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Artwork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120, verbose_name='Название')),
                ('description', models.TextField(verbose_name='Описание')),
                ('image', models.ImageField(upload_to='artworks/images/%Y/%m/%d/', verbose_name='Изображение')),
                ('style', models.CharField(choices=[('realism', 'Реализм'), ('abstract', 'Абстракционизм'), ('impressionism', 'Импрессионизм'), ('surrealism', 'Сюрреализм'), ('pop_art', 'Поп-арт'), ('cubism', 'Кубизм'), ('expressionism', 'Экспрессионизм'), ('renaissance', 'Ренессанс'), ('baroque', 'Барокко'), ('romanticism', 'Романтизм')], max_length=50, verbose_name='Стиль')),
                ('medium', models.CharField(choices=[('oil', 'Масло'), ('acrylic', 'Акрил'), ('watercolor', 'Акварель'), ('pastel', 'Пастель'), ('digital', 'Цифровое искусство'), ('charcoal', 'Уголь'), ('ink', 'Тушь'), ('pencil', 'Карандаш'), ('mixed', 'Смешанная техника')], max_length=50, verbose_name='Техника')),
                ('year_created', models.IntegerField(validators=[main.models.validate_year], verbose_name='Год создания')),
                ('width', models.DecimalField(decimal_places=1, max_digits=6, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Ширина (см)')),
                ('height', models.DecimalField(decimal_places=1, max_digits=6, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Высота (см)')),
                ('depth', models.DecimalField(blank=True, decimal_places=1, help_text='Только для скульптур и 3D работ', max_digits=6, null=True, verbose_name='Глубина (см)')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='Цена')),
                ('status', models.CharField(choices=[('active', 'Активен'), ('sold', 'Продан'), ('reserved', 'Зарезервирован'), ('archived', 'В архиве')], default='active', max_length=20, verbose_name='Статус')),
                ('is_framed', models.BooleanField(default=False, verbose_name='В рамке')),
                ('is_certified', models.BooleanField(default=False, verbose_name='Сертификат подлинности')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('artist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='artworks', to='main.artist', verbose_name='Художник')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artworks', to=settings.AUTH_USER_MODEL, verbose_name='Продавец')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='artworks', to='main.category', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Картина',
                'verbose_name_plural': 'Картины',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ArtworkImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='artworks/images/additional/%Y/%m/%d/', verbose_name='Дополнительное изображение')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Описание изображения')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата загрузки')),
                ('artwork', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='additional_images', to='main.artwork', verbose_name='Картина')),
            ],
            options={
                'verbose_name': 'Дополнительное изображение',
                'verbose_name_plural': 'Дополнительные изображения',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True, verbose_name='Добавлено')),
                ('artwork', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_favorites', to='main.artwork', verbose_name='Картина')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorites', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Избранное',
                'verbose_name_plural': 'Избранные',
                'ordering': ['-added_at'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('status', models.CharField(choices=[('created', 'Создан'), ('paid', 'Оплачен'), ('shipped', 'Отправлен'), ('delivered', 'Доставлен'), ('completed', 'Завершен'), ('disputed', 'Спор'), ('cancelled', 'Отменен')], default='created', max_length=20, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('shipping_address', models.TextField(blank=True, null=True, verbose_name='Адрес доставки')),
                ('shipping_method', models.CharField(choices=[('pickup', 'Самовывоз'), ('courier', 'Курьер'), ('post', 'Почта'), ('express', 'Экспресс-доставка')], default='pickup', max_length=20, verbose_name='Способ доставки')),
                ('shipping_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Стоимость доставки')),
                ('insurance', models.BooleanField(default=False, verbose_name='Страховка')),
                ('insurance_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Стоимость страховки')),
                ('total_price', models.DecimalField(decimal_places=2, editable=False, max_digits=10, verbose_name='Итоговая цена')),
                ('artwork', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='main.artwork', verbose_name='Картина')),
                ('buyer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='Покупатель')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Сумма')),
                ('method', models.CharField(choices=[('card', 'Кредитная карта'), ('paypal', 'PayPal'), ('bank', 'Банковский перевод'), ('crypto', 'Криптовалюта')], max_length=50, verbose_name='Метод оплаты')),
                ('transaction_id', models.CharField(max_length=255, unique=True, verbose_name='ID транзакции')),
                ('status', models.CharField(choices=[('pending', 'Ожидает'), ('completed', 'Завершен'), ('refunded', 'Возвращен'), ('failed', 'Неудачный')], default='pending', max_length=20, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата завершения')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='main.order', verbose_name='Заказ')),
            ],
            options={
                'verbose_name': 'Платеж',
                'verbose_name_plural': 'Платежи',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Рейтинг')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Одобрен')),
                ('artwork', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='main.artwork', verbose_name='Картина')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='main.order', verbose_name='Заказ')),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews_received', to=settings.AUTH_USER_MODEL, verbose_name='Продавец')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Verification',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='verification', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('document_type', models.CharField(choices=[('passport', 'Паспорт'), ('driver_license', 'Водительское удостоверение'), ('id_card', 'ID-карта')], max_length=50, verbose_name='Тип документа')),
                ('document_number', models.CharField(max_length=100, verbose_name='Номер документа')),
                ('document_front', models.ImageField(upload_to='verifications/documents/%Y/%m/%d/', verbose_name='Лицевая сторона документа')),
                ('document_back', models.ImageField(blank=True, null=True, upload_to='verifications/documents/%Y/%m/%d/', verbose_name='Обратная сторона документа')),
                ('status', models.CharField(choices=[('pending', 'На проверке'), ('verified', 'Подтверждено'), ('rejected', 'Отклонено')], default='pending', max_length=20, verbose_name='Статус')),
                ('verified_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата проверки')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий модератора')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_users', to=settings.AUTH_USER_MODEL, verbose_name='Проверил')),
            ],
            options={
                'verbose_name': 'Верификация',
                'verbose_name_plural': 'Верификации',
                'ordering': ['-verified_at'],
            },
        ),
        migrations.AddIndex(
            model_name='artwork',
            index=models.Index(fields=['price'], name='main_artwor_price_549e71_idx'),
        ),
        migrations.AddIndex(
            model_name='artwork',
            index=models.Index(fields=['created_at'], name='main_artwor_created_e444ab_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='favorite',
            unique_together={('user', 'artwork')},
        ),
    ]
